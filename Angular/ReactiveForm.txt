Reactive Form and its Validation

  <form [formGroup]="myForm" (ngSubmit)="onSubmit()">
  <div>
    <label for="name">Name:</label>
    <input id="name" 
    formControlName="name" 
    type="text" />
    <div *ngIf="myForm.get('name')?.invalid
     && (myForm.get('name')?.dirty 
     || myForm.get('name')?.touched)">
      <small *ngIf="myForm.get('name')?.errors?.['required']">Name is required.</small>
      <small *ngIf="myForm.get('name')?.errors?.['minlength']">Name must be at least 3 characters long.</small>
    </div>
  </div>

  <div>
    <label for="email">Email:</label>
    <input
      id="email"
      formControlName="email"
      type="email"
    />
    <div *ngIf="myForm.get('email')?.invalid && (myForm.get('email')?.dirty || myForm.get('email')?.touched)">
      <small *ngIf="myForm.get('email')?.errors?.['required']">Email is required.</small>
      <small *ngIf="myForm.get('email')?.errors?.['email']">Invalid email address.</small>
    </div>
  </div>

  <button type="submit" [disabled]="myForm.invalid">Submit</button>
</form>

///Typescript

import { Component } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';

@Component({
  selector: 'app-products',
  templateUrl: './products.component.html',
  styleUrl: './products.component.css'
})
export class ProductsComponent {
  myForm!: FormGroup;

  constructor(private fb: FormBuilder) {}

  ngOnInit(): void {
    this.myForm = this.fb.group({
      
      name: ['', [Validators.required, 
        Validators.minLength(3)]],


      email: ['', [Validators.required, 
        Validators.email]]
    });
  }

  onSubmit(): void {
    if (this.myForm.valid) {
      console.log('Form Submitted!', this.myForm.value);
    } else {
      console.log('Form is invalid');
    }
  }


}